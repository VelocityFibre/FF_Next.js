// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/" | "/action-items" | "/analytics" | "/clients" | "/clients/[id]" | "/clients/[id]/edit" | "/clients/new" | "/dashboard" | "/field" | "/meetings" | "/pole-capture" | "/pole-tracker" | "/procurement" | "/procurement/boq" | "/procurement/rfq" | "/procurement/stock" | "/projects" | "/projects/[id]" | "/projects/[id]/edit" | "/projects/[id]/tracker" | "/projects/new" | "/reports" | "/sign-in" | "/sow" | "/sow-management" | "/sow/import" | "/sow/list" | "/staff" | "/staff/[id]" | "/staff/[id]/edit" | "/staff/import" | "/staff/new"
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = "/api/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/action-items": {}
  "/analytics": {}
  "/api/[[...path]]": { "path"?: string[]; }
  "/clients": {}
  "/clients/[id]": { "id": string; }
  "/clients/[id]/edit": { "id": string; }
  "/clients/new": {}
  "/dashboard": {}
  "/field": {}
  "/meetings": {}
  "/pole-capture": {}
  "/pole-tracker": {}
  "/procurement": {}
  "/procurement/boq": {}
  "/procurement/rfq": {}
  "/procurement/stock": {}
  "/projects": {}
  "/projects/[id]": { "id": string; }
  "/projects/[id]/edit": { "id": string; }
  "/projects/[id]/tracker": { "id": string; }
  "/projects/new": {}
  "/reports": {}
  "/sign-in": {}
  "/sow": {}
  "/sow-management": {}
  "/sow/import": {}
  "/sow/list": {}
  "/staff": {}
  "/staff/[id]": { "id": string; }
  "/staff/[id]/edit": { "id": string; }
  "/staff/import": {}
  "/staff/new": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
