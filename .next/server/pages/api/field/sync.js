"use strict";(()=>{var a={};a.id=1937,a.ids=[1937],a.modules={7274:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>g});var e=c(10762),f=a([e]);async function g(a,b){if("GET"===a.method)try{let{technicianId:c,deviceId:d}=a.query;if(!c)return b.status(400).json({error:"Technician ID required"});let e={technicianId:c,deviceId:d,lastSyncTimestamp:new Date().toISOString(),pendingChanges:0,conflicts:[],offlineCapability:!0,message:"Field sync functionality is being migrated"};b.status(200).json(e)}catch(a){console.error("Error getting sync status:",a),b.status(500).json({error:"Failed to get sync status"})}else if("POST"===a.method)try{let c=a.body;if(!c.technicianId||!c.deviceId)return b.status(400).json({error:"Missing required fields: technicianId and deviceId"});let d={success:!0,timestamp:new Date().toISOString(),itemsProcessed:{tasks:0,qualityChecks:0,photos:0,schedules:0},conflicts:[],errors:[],message:"Sync acknowledged - processing temporarily disabled during migration"};b.status(200).json(d)}catch(a){console.error("Error syncing field data:",a),b.status(500).json({error:"Failed to sync field data"})}else if("PUT"===a.method)try{let{conflicts:c}=a.body;b.status(200).json({success:!0,resolved:c?.length||0,timestamp:new Date().toISOString(),message:"Conflict resolution acknowledged"})}catch(a){console.error("Error resolving sync conflicts:",a),b.status(500).json({error:"Failed to resolve sync conflicts"})}else b.status(405).json({error:"Method not allowed"})}e=(f.then?(await f)():f)[0],(0,e.neon)(process.env.DATABASE_URL),d()}catch(a){d(a)}})},10762:a=>{a.exports=import("@neondatabase/serverless")},18248:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(29046),f=c(8667),g=c(33480),h=c(86435),i=c(7274),j=c(58112),k=c(18766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/field/sync",pathname:"/api/field/sync",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/field/sync"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/field/sync",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=18248));module.exports=c})();