"use strict";(()=>{var a={};a.id=4267,a.ids=[4267],a.modules={10762:a=>{a.exports=import("@neondatabase/serverless")},19860:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>g});var e=c(10762),f=a([e]);e=(f.then?(await f)():f)[0];let h=(0,e.neon)(process.env.DATABASE_URL);async function g(a,b){if("GET"!==a.method)return b.status(405).json({error:"Method not allowed"});let{startDate:c,endDate:d,groupBy:e="monthly"}=a.query;try{let a=new Date,c=new Date(a.getTime()-2592e6),d=new Date(a.getTime()-5184e6),[e,f]=await Promise.all([h`
        SELECT 
          (SELECT COUNT(*) FROM projects WHERE created_at >= ${c}) as new_projects,
          (SELECT COUNT(*) FROM staff WHERE created_at >= ${c}) as new_staff,
          (SELECT COUNT(*) FROM sow_imports WHERE imported_at >= ${c} AND import_type = 'poles') as new_poles,
          (SELECT COUNT(*) FROM sow_imports WHERE imported_at >= ${c} AND import_type = 'drops') as new_drops,
          (SELECT COALESCE(SUM(processed_records), 0) FROM sow_imports WHERE imported_at >= ${c}) as new_tasks
      `,h`
        SELECT 
          (SELECT COUNT(*) FROM projects WHERE created_at >= ${d} AND created_at < ${c}) as prev_projects,
          (SELECT COUNT(*) FROM staff WHERE created_at >= ${d} AND created_at < ${c}) as prev_staff,
          (SELECT COUNT(*) FROM sow_imports WHERE imported_at >= ${d} AND imported_at < ${c} AND import_type = 'poles') as prev_poles,
          (SELECT COUNT(*) FROM sow_imports WHERE imported_at >= ${d} AND imported_at < ${c} AND import_type = 'drops') as prev_drops,
          (SELECT COALESCE(SUM(processed_records), 0) FROM sow_imports WHERE imported_at >= ${d} AND imported_at < ${c}) as prev_tasks
      `]),g=e[0]||{},i=f[0]||{},j=(a,b)=>{if(0===b)return{value:a,direction:a>0?"up":"stable",percentage:100*(a>0)};let c=(a-b)/b*100;return{value:a,direction:c>0?"up":c<0?"down":"stable",percentage:Math.abs(Math.round(c))}},k={activeProjects:j(parseInt(g.new_projects)||0,parseInt(i.prev_projects)||0),teamMembers:j(parseInt(g.new_staff)||0,parseInt(i.prev_staff)||0),polesInstalled:j(parseInt(g.new_poles)||0,parseInt(i.prev_poles)||0),dropsCompleted:j(parseInt(g.new_drops)||0,parseInt(i.prev_drops)||0),completedTasks:j(parseInt(g.new_tasks)||0,parseInt(i.prev_tasks)||0),openIssues:{value:0,direction:"stable",percentage:0}};return b.status(200).json({success:!0,data:k,projects:{trends:k},revenue:{trends:{}},staff:{trends:k}})}catch(c){console.error("Dashboard trends error:",c);let a={value:0,direction:"stable",percentage:0};return b.status(200).json({success:!0,data:{activeProjects:a,teamMembers:a,completedTasks:a,openIssues:a,polesInstalled:a,dropsCompleted:a},projects:{trends:{}},revenue:{trends:{}},staff:{trends:{}}})}}d()}catch(a){d(a)}})},41632:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(29046),f=c(8667),g=c(33480),h=c(86435),i=c(19860),j=c(58112),k=c(18766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/analytics/dashboard/trends",pathname:"/api/analytics/dashboard/trends",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/analytics/dashboard/trends"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/analytics/dashboard/trends",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=41632));module.exports=c})();