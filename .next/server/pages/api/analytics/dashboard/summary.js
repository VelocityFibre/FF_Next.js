"use strict";(()=>{var a={};a.id=9641,a.ids=[9641],a.modules={10762:a=>{a.exports=import("@neondatabase/serverless")},30608:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(29046),f=c(8667),g=c(33480),h=c(86435),i=c(71160),j=c(58112),k=c(18766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/analytics/dashboard/summary",pathname:"/api/analytics/dashboard/summary",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/analytics/dashboard/summary"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/analytics/dashboard/summary",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},71160:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>g});var e=c(10762),f=a([e]);e=(f.then?(await f)():f)[0];let h=(0,e.neon)(process.env.DATABASE_URL);async function g(a,b){if("GET"!==a.method)return b.status(405).json({error:"Method not allowed"});let{period:c="monthly"}=a.query;try{let a,d=new Date;switch(c){case"daily":a=new Date(d.getTime()-864e5);break;case"weekly":a=new Date(d.getTime()-6048e5);break;case"quarterly":a=new Date(d.getTime()-7776e6);break;case"yearly":a=new Date(d.getTime()-31536e6);break;default:a=new Date(d.getTime()-2592e6)}let[e,f,g,i]=await Promise.all([h`
        SELECT 
          COUNT(*) as total_projects,
          COUNT(CASE WHEN created_at >= ${a} THEN 1 END) as new_projects,
          COUNT(CASE WHEN status = 'active' OR status = 'in_progress' THEN 1 END) as active_projects,
          COUNT(CASE WHEN status = 'completed' AND updated_at >= ${a} THEN 1 END) as recently_completed
        FROM projects
      `,h`
        SELECT 
          COUNT(*) as total_staff,
          COUNT(CASE WHEN created_at >= ${a} THEN 1 END) as new_hires,
          COUNT(CASE WHEN status = 'active' THEN 1 END) as active_staff
        FROM staff
      `,h`
        SELECT 
          (SELECT COUNT(*) FROM sow_poles WHERE created_at >= ${a}) as poles_this_period,
          (SELECT COUNT(*) FROM sow_drops WHERE created_at >= ${a}) as drops_this_period,
          (SELECT COALESCE(SUM(length), 0) FROM sow_fibre WHERE created_at >= ${a}) as fiber_this_period
      `,h`
        SELECT 
          COALESCE(SUM(budget), 0) as total_budget,
          COALESCE(AVG(budget), 0) as average_budget
        FROM projects
        WHERE created_at >= ${a}
      `]),j=e[0]||{},k=f[0]||{},l=g[0]||{},m=i[0]||{},n={period:c,startDate:a.toISOString(),endDate:d.toISOString(),projects:{total:parseInt(j.total_projects)||0,new:parseInt(j.new_projects)||0,active:parseInt(j.active_projects)||0,completed:parseInt(j.recently_completed)||0},staff:{total:parseInt(k.total_staff)||0,new:parseInt(k.new_hires)||0,active:parseInt(k.active_staff)||0},infrastructure:{poles:parseInt(l.poles_this_period)||0,drops:parseInt(l.drops_this_period)||0,fiber:parseInt(l.fiber_this_period)||0},financial:{totalBudget:parseFloat(m.total_budget)||0,averageBudget:parseFloat(m.average_budget)||0},highlights:[{metric:"New Projects",value:parseInt(j.new_projects)||0,change:"neutral"},{metric:"Active Staff",value:parseInt(k.active_staff)||0,change:"neutral"},{metric:"Infrastructure Deployed",value:(parseInt(l.poles_this_period)||0)+(parseInt(l.drops_this_period)||0),change:"neutral"}]};return b.status(200).json({success:!0,data:n})}catch(a){return console.error("Dashboard summary error:",a),b.status(200).json({success:!0,data:{period:c,startDate:new Date().toISOString(),endDate:new Date().toISOString(),projects:{total:0,new:0,active:0,completed:0},staff:{total:0,new:0,active:0},infrastructure:{poles:0,drops:0,fiber:0},financial:{totalBudget:0,averageBudget:0},highlights:[]}})}}d()}catch(a){d(a)}})},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=30608));module.exports=c})();