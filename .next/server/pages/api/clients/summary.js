"use strict";(()=>{var a={};a.id=5416,a.ids=[5416],a.modules={10762:a=>{a.exports=import("@neondatabase/serverless")},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},94021:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>g});var e=c(10762),f=a([e]);e=(f.then?(await f)():f)[0];let h=(0,e.neon)(process.env.DATABASE_URL);async function g(a,b){if(b.setHeader("Access-Control-Allow-Credentials","true"),b.setHeader("Access-Control-Allow-Origin","*"),b.setHeader("Access-Control-Allow-Methods","GET,OPTIONS"),b.setHeader("Access-Control-Allow-Headers","X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version"),"OPTIONS"===a.method)return void b.status(200).end();if("GET"!==a.method)return b.status(405).json({success:!1,error:"Method not allowed"});try{let a=await h`
      SELECT 
        COUNT(*) as total_clients,
        COUNT(CASE WHEN status = 'ACTIVE' THEN 1 END) as active_clients,
        COUNT(CASE WHEN status = 'INACTIVE' THEN 1 END) as inactive_clients,
        COUNT(CASE WHEN metadata->>'priority' = 'HIGH' THEN 1 END) as high_priority,
        COUNT(CASE WHEN metadata->>'category' = 'PREMIUM' THEN 1 END) as premium_clients
      FROM clients
    `,c={totalClients:parseInt(a[0].total_clients),activeClients:parseInt(a[0].active_clients),inactiveClients:parseInt(a[0].inactive_clients),prospectClients:0,totalProjectValue:0,averageProjectValue:0,topClientsByValue:[],clientsByCategory:{},clientsByStatus:{ACTIVE:parseInt(a[0].active_clients),INACTIVE:parseInt(a[0].inactive_clients)},clientsByPriority:{HIGH:parseInt(a[0].high_priority)},monthlyGrowth:0,conversionRate:0};b.status(200).json({success:!0,data:c})}catch(a){console.error("Client Summary API Error:",a),b.status(500).json({success:!1,error:a.message})}}d()}catch(a){d(a)}})},99982:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(29046),f=c(8667),g=c(33480),h=c(86435),i=c(94021),j=c(58112),k=c(18766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/clients/summary",pathname:"/api/clients/summary",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/clients/summary"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/clients/summary",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=99982));module.exports=c})();